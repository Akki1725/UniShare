// Generated by view binder compiler. Do not edit!
package com.michaelians.bluteeth.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.michaelians.bluteeth.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final FloatingActionButton bluetoothBtn;

  @NonNull
  public final TextView debugWindow;

  @NonNull
  public final FloatingActionButton dialer;

  @NonNull
  public final FloatingActionButton enableDiscoveryBtn;

  @NonNull
  public final FrameLayout framer;

  @NonNull
  public final FloatingActionButton listenBtn;

  @NonNull
  public final FloatingActionButton listenForCallsBtn;

  @NonNull
  public final MaterialToolbar mainToolbar;

  @NonNull
  public final FloatingActionButton moreBtn;

  @NonNull
  public final BottomNavigationView navBar;

  @NonNull
  public final TextView statusBar;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull FloatingActionButton bluetoothBtn,
      @NonNull TextView debugWindow, @NonNull FloatingActionButton dialer,
      @NonNull FloatingActionButton enableDiscoveryBtn, @NonNull FrameLayout framer,
      @NonNull FloatingActionButton listenBtn, @NonNull FloatingActionButton listenForCallsBtn,
      @NonNull MaterialToolbar mainToolbar, @NonNull FloatingActionButton moreBtn,
      @NonNull BottomNavigationView navBar, @NonNull TextView statusBar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.bluetoothBtn = bluetoothBtn;
    this.debugWindow = debugWindow;
    this.dialer = dialer;
    this.enableDiscoveryBtn = enableDiscoveryBtn;
    this.framer = framer;
    this.listenBtn = listenBtn;
    this.listenForCallsBtn = listenForCallsBtn;
    this.mainToolbar = mainToolbar;
    this.moreBtn = moreBtn;
    this.navBar = navBar;
    this.statusBar = statusBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.bluetoothBtn;
      FloatingActionButton bluetoothBtn = ViewBindings.findChildViewById(rootView, id);
      if (bluetoothBtn == null) {
        break missingId;
      }

      id = R.id.debugWindow;
      TextView debugWindow = ViewBindings.findChildViewById(rootView, id);
      if (debugWindow == null) {
        break missingId;
      }

      id = R.id.dialer;
      FloatingActionButton dialer = ViewBindings.findChildViewById(rootView, id);
      if (dialer == null) {
        break missingId;
      }

      id = R.id.enableDiscoveryBtn;
      FloatingActionButton enableDiscoveryBtn = ViewBindings.findChildViewById(rootView, id);
      if (enableDiscoveryBtn == null) {
        break missingId;
      }

      id = R.id.framer;
      FrameLayout framer = ViewBindings.findChildViewById(rootView, id);
      if (framer == null) {
        break missingId;
      }

      id = R.id.listenBtn;
      FloatingActionButton listenBtn = ViewBindings.findChildViewById(rootView, id);
      if (listenBtn == null) {
        break missingId;
      }

      id = R.id.listenForCallsBtn;
      FloatingActionButton listenForCallsBtn = ViewBindings.findChildViewById(rootView, id);
      if (listenForCallsBtn == null) {
        break missingId;
      }

      id = R.id.mainToolbar;
      MaterialToolbar mainToolbar = ViewBindings.findChildViewById(rootView, id);
      if (mainToolbar == null) {
        break missingId;
      }

      id = R.id.moreBtn;
      FloatingActionButton moreBtn = ViewBindings.findChildViewById(rootView, id);
      if (moreBtn == null) {
        break missingId;
      }

      id = R.id.navBar;
      BottomNavigationView navBar = ViewBindings.findChildViewById(rootView, id);
      if (navBar == null) {
        break missingId;
      }

      id = R.id.statusBar;
      TextView statusBar = ViewBindings.findChildViewById(rootView, id);
      if (statusBar == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, appBarLayout, bluetoothBtn,
          debugWindow, dialer, enableDiscoveryBtn, framer, listenBtn, listenForCallsBtn,
          mainToolbar, moreBtn, navBar, statusBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
