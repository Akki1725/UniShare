// Generated by view binder compiler. Do not edit!
package com.michaelians.bluteeth.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.michaelians.bluteeth.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowDevicesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView deviceIcon;

  @NonNull
  public final TextView deviceName;

  @NonNull
  public final TextView status;

  @NonNull
  public final ImageView videoCall;

  @NonNull
  public final ImageView voiceCall;

  private RowDevicesBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView deviceIcon,
      @NonNull TextView deviceName, @NonNull TextView status, @NonNull ImageView videoCall,
      @NonNull ImageView voiceCall) {
    this.rootView = rootView;
    this.deviceIcon = deviceIcon;
    this.deviceName = deviceName;
    this.status = status;
    this.videoCall = videoCall;
    this.voiceCall = voiceCall;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowDevicesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowDevicesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_devices, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowDevicesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.device_icon;
      ImageView deviceIcon = ViewBindings.findChildViewById(rootView, id);
      if (deviceIcon == null) {
        break missingId;
      }

      id = R.id.device_name;
      TextView deviceName = ViewBindings.findChildViewById(rootView, id);
      if (deviceName == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      id = R.id.videoCall;
      ImageView videoCall = ViewBindings.findChildViewById(rootView, id);
      if (videoCall == null) {
        break missingId;
      }

      id = R.id.voiceCall;
      ImageView voiceCall = ViewBindings.findChildViewById(rootView, id);
      if (voiceCall == null) {
        break missingId;
      }

      return new RowDevicesBinding((ConstraintLayout) rootView, deviceIcon, deviceName, status,
          videoCall, voiceCall);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
